#!/usr/bin/env bash
#
# git-stat - Colorize git status to indicate branch state
#
# Author: Corey Goldberg (https://github.com/cgoldberg)
#
# Requirements:
#  - Bash
#  - Git
#  - Terminal with 256 color palette support
#
# Usage:
#  - Add this script to a directory on your PATH
#  - Make this script executable (chmod +x git-stat)
#  - Run `git stat` from any directory inside a Git repo

set -e

die() { echo "$*" 1>&2 ; exit 1; }

if [ ! -x "$(command -v git)" ]; then
    die "fatal: can't find git"
fi

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    die "fatal: not a git repository"
fi

if [[ "${TERM}" != *"256color" ]]; then
    git status
    exit
fi

clean="38;5;82"         # green
untracked="38;5;70"     # faded green
ahead_behind="38;5;226" # yellow
diverged="38;5;196"     # red
staged="38;5;214"       # orange yellow
unstaged="38;5;202"     # orange
dirty="38;5;196"        # red

branch=$(git rev-parse --abbrev-ref HEAD)
status=$(git -c color.status=always status)
color="0"

message="Your branch is up to date with.+\."
if [[ "${status}" =~ ${message} ]]; then
    color="${clean}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch is ahead.+commit.*\."
if [[ "${status}" =~ ${message} ]]; then
    color="${ahead_behind}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch is behind.+commit.*\."
if [[ "${status}" =~ ${message} ]]; then
    color="${ahead_behind}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch.+diverged\."
if [[ "${status}" =~ ${message} ]]; then
    color="${diverged}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

messages=(
    "nothing to commit, working tree clean"
    "Untracked files:"
    "Changed but not updated:"
    "Changes not staged for commit:"
    "Changes to be committed:"
    "Unmerged paths:"
)
colors=(
    "${clean}"
    "${untracked}"
    "${unstaged}"
    "${unstaged}"
    "${staged}"
    "${dirty}"
)
for i in ${!messages[@]}; do
    message=${messages[i]}
    if [[ "${status}" =~ "${message}" ]]; then
        color=${colors[i]}
        status=$(sed "s/${message}/\\\033[${color}m${message}\\\033[0m/" <<<"${status}")
    fi
done

# colorize branch name with last color
colored_status=$(sed "s/${branch}$/\\\033[${color}m${branch}\\\033[0m/" <<<"${status}")
echo -e "${colored_status}"
