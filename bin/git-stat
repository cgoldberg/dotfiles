#!/usr/bin/env bash
#
# git-stat - Colorize git status to indicate branch state
#
# Author: Corey Goldberg (https://github.com/cgoldberg)
#
# Requirements:
#  - Bash
#  - Git
#
# Usage:
#  - Add this script to a directory on your PATH
#  - Make this script executable (chmod +x git-stat)
#  - Run `git stat` from any directory in a local Git repo

set -e

die() { echo "$*" 1>&2 ; exit 1; }

if [ ! -x "$(command -v git)" ]; then
    die "fatal: can't find git"
fi

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    die "fatal: not a git repository"
fi

clean="1;32"        # bold green
ahead_behind="1;33" # bold yellow
diverged="1;31"     # bold red
staged="0;32"       # green
unstaged="0;33"     # yellow
untracked="0;31"    # red
unmerged="1;31"     # bold red

status_colors=(
     "color.status='always'"
     "color.status.branch='brightmagenta bold'"
     "color.status.nobranch='red bold'"
     "color.status.added='green'"
     "color.status.updated='green'"
     "color.status.changed='yellow'"
     "color.status.untracked='red'"
     "color.status.unmerged='brightred bold'"
)
for sc in "${status_colors[@]}"; do
    color_opts="${color_opts} -c ${sc}"
done

status=$(eval "git ${color_opts} status")

message="Your branch is up to date with.+\."
if [[ "${status}" =~ ${message} ]]; then
    color="${clean}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch is ahead.+commit.*\."
if [[ "${status}" =~ ${message} ]]; then
    color="${ahead_behind}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch is behind.+commit.*\."
if [[ "${status}" =~ ${message} ]]; then
    color="${ahead_behind}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

message="Your branch.+diverged\."
if [[ "${status}" =~ ${message} ]]; then
    color="${diverged}"
    status=$(sed -E "s/(${message})/\\\033[${color}m\0\\\033[0m/" <<<"${status}")
fi

messages=(
    "nothing to commit, working tree clean"
    "Untracked files:"
    "Changed but not updated:"
    "Changes not staged for commit:"
    "Changes to be committed:"
    "Unmerged paths:"
)
colors=(
    "${clean}"
    "${untracked}"
    "${unstaged}"
    "${unstaged}"
    "${staged}"
    "${unmerged}"
)
for i in ${!messages[@]}; do
    message=${messages[i]}
    if [[ "${status}" =~ "${message}" ]]; then
        color=${colors[i]}
        status=$(sed "s/${message}/\\\033[${color}m${message}\\\033[0m/" <<<"${status}")
    fi
done

echo -e "${status}"
