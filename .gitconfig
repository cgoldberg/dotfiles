[user]
    name = Corey Goldberg
    email = 1113081+cgoldberg@users.noreply.github.com

[pull]
    rebase = true

[push]
    default = simple
    autoSetupRemote = true

[color]
    ui = always
    branch = always
    diff = always
    interactive = always
    status = always

[alias]

    # basic aliases
    b = branch
    i = info # ~/bin/git-info
    s = status
    br = branch --all --list # list local and remote-tracking branches
    co = checkout
    df = diff --staged
    rb = rebase
    clone-b = clone --filter=blob:none # blobless clone
    clone-s = clone --depth=1 # shallow clone

    # pretty commit logs
    ls = log --pretty=format:'%C(auto,yellow)%h %C(auto,blue)%>(12,trunc)%ar %C(auto,magenta)%<(14,trunc)%aN %C(auto,green)%s%Creset'
    ll = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

    # commit changes with inline message
    ci = !git commit -a -m $2

    # list git aliases
    alias = "!f() { git config --list | grep alias | cut -c 7- | sort; }; f"

    # remove objects that are no longer referenced, remove deleted remote references, and run garbage collection
    tidy = "!f() { git prune --progress --verbose && git remote prune origin && git gc; }; f"

    # list local branches with last commit date and commit hash, sorted by last modified
    branches = "!f() { git for-each-ref --sort='-authordate' --format='%(authordate)%09%09%(objectname:short)%09%09%(refname)' refs/heads | sed -e 's-refs/heads/--'; }; f"

    # open Github page for current repo
    open = "!f() { xdg-open $(git remote -v | awk '/fetch/{print $2}' | sed -Ee 's#(git@|git://)#https://#' -e 's@com:@com/@'); }; f"
