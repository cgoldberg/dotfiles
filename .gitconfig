# ~/.gitconfig
#
# global git configuration
# (set in each repo's .git/config to override these)

[user]
    name = Corey Goldberg
    email = 1113081+cgoldberg@users.noreply.github.com
    useConfigOnly = true

[color]
    branch = always
    decorate = always
    diff = always
    grep = always
    interactive = always
    showbranch = always
    status = always
    ui = always

[core]
    safecrlf = true

[pull]
    rebase = true

[push]
    default = simple
    autoSetupRemote = true

[rebase]
    autoStash = true

[status]
    showStash = true

[filter "lfs"]
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f

[alias]
    b = branch
    d = diff
    s = stat # ~/bin/git-stat
    bd = branch -D # delete branch (even if not merged)
    br = branch --all --list # list local and remote-tracking branches
    co = checkout
    df = diff --staged
    clone-blobless = clone --filter=blob:none
    clone-shallow = clone --depth=1
    undo = reset --soft HEAD~1 # reset current branch to previous commit, preserving all changes

    # commit logs
    l = log --stat --pretty=fuller
    lg = log -p --pretty=fuller
    ll = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    ls = log --pretty=tformat:'%C(auto,yellow)%h %C(auto,blue)%>(12,trunc)%ar %C(auto,magenta)%<(14,trunc)%aN %C(auto,green)%s%Creset'

    # list git aliases
    alias = !git config --list | grep alias | cut -c 7- | tr -s ' ' | sort

    # commit all staged/unstaged changes with inline message
    ci = !git commit --all --message $2

    # open Github page for default remote repository (requires GitHub CLI)
    open = !gh repo view --web

    # remove objects that are no longer referenced, remove deleted remote references, and run garbage collection
    tidy = "!f() { \
        git fetch --prune --verbose && git prune --progress --verbose \
            && git remote prune origin && git gc --prune=now; \
    }; f"

    # sync remote with parent if in a fork, and rebase all local branches
    up = "!f() { git syncrepo; sleep 3; git sync; }; f"

    # list local branches with last commit date and commit hash, sorted by last modified
    branches = "!f() { \
        git for-each-ref --sort='-authordate' \
            --format='%(authordate)%09%09%(objectname:short)%09%09%(refname)' refs/heads \
            | sed -e 's-refs/heads/--'; \
    }; f"


# overrides for Windows/ADO
[includeIf "hasconfig:remote.*.url:git@ssh.dev.azure.com:*/**"]
    path = ~/.gitconfig_win
