# ~/.bashrc_windows
# =========================
#  bash shell configuration
# =========================


# this file only works on MinGW
if [[ "${OSTYPE}" != "msys"* ]]; then
    return
fi


# set a color prompt with: user@host:dir, git branch (if in a git repo)
custom_prompt='\[\033[01;34m\]\w\[\033[00m\]\[\033[0;32m\]$(__git_ps1 " (%s) ")\[\033[0m\]\$ '
PS1="${custom_prompt}"


load_ssh_key () {
    local ssh_env=~/.ssh/agent.env
    agent_load_env () {
        test -f "${ssh_env}" && source "${ssh_env}" >| /dev/null ;
    }
    agent_start () {
        (umask 077; ssh-agent >| "${ssh_env}")
        source "${ssh_env}" >| /dev/null ; }
    agent_load_env
    # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
    local agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)
    if [ ! "${SSH_AUTH_SOCK}" ] || [ "${agent_run_state}" = 2 ]; then
        agent_start
        ssh-add
    elif [ "${SSH_AUTH_SOCK}" ] && [ "${agent_run_state}" = 1 ]; then
        ssh-add
    fi
}
load_ssh_key


# python virtual env
alias activate="source ./venv/Scripts/activate"
alias act="activate"
alias deact="deactivate"


cd "${HOME}"
if [ -d "${HOME}/code" ]; then
    cd "${HOME}/code"
fi
